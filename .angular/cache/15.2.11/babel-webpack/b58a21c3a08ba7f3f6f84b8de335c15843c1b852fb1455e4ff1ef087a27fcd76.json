{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"./indexed-db.service\";\nexport let UserLoginService = /*#__PURE__*/(() => {\n  class UserLoginService {\n    constructor(cookie, indexedDbService) {\n      this.cookie = cookie;\n      this.indexedDbService = indexedDbService;\n      this.loggedIn = false;\n      const temp = this.cookie.get('status');\n      this.loggedIn = temp === 'true';\n    }\n    SignIn(username, pass) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const users = (yield this.indexedDbService.getItem('hospitalUsers')) || [];\n        const foundUser = users.find(user => user.username.toLowerCase() === username.toLowerCase() && user.password.toLowerCase() === pass.toLowerCase());\n        if (foundUser) {\n          console.log('for', foundUser);\n          yield this.indexedDbService.setItem('loginUser', foundUser.username);\n          this.loggedIn = true;\n          this.cookie.set('status', 'true', 1);\n          return true;\n        }\n        return false;\n      });\n    }\n    SignOut() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.cookie.delete('status');\n        this.loggedIn = false;\n        yield this.indexedDbService.removeItem('loginUser');\n      });\n    }\n    get status() {\n      return this.loggedIn;\n    }\n    getLoginUser() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.indexedDbService.getItem('loginUser');\n      });\n    }\n  }\n  UserLoginService.ɵfac = function UserLoginService_Factory(t) {\n    return new (t || UserLoginService)(i0.ɵɵinject(i1.CookieService), i0.ɵɵinject(i2.IndexedDbService));\n  };\n  UserLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserLoginService,\n    factory: UserLoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserLoginService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}