{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/Services/indexed-db.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/checkbox\";\nfunction OtFormComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"mat-checkbox\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 19)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.products[i_r4], \" \");\n  }\n}\nfunction OtFormComponent_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function OtFormComponent_button_39_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.submitForm());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtFormComponent_button_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function OtFormComponent_button_40_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.submitForm());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let OtFormComponent = /*#__PURE__*/(() => {\n  class OtFormComponent {\n    constructor(fb, router, indexedDb) {\n      this.fb = fb;\n      this.router = router;\n      this.indexedDb = indexedDb;\n      this.isEditMode = false;\n      this.otlist = [];\n      this.editingId = null;\n      this.isCancelForm = new EventEmitter();\n      this.products = ['INJ. AVIL', 'INJ. DECADRON', 'INJ. DERMOCUIM', 'INJ. ATROPINE', 'INJ. TRAMADOL', 'INJ. TORLAC', 'INJ. KINZ', 'INJ. OXYTOCIN', 'INJ. IBUPROFEN SP', 'INJ. TRANEXAMINE 500MG', 'INSULIN CONTAF 250MG', 'INJ. GENTAMICANE 40MG', 'INJ. KETSOL 100MG', 'INJ. SODIUM BICARBA 25ML', 'INJ. FLUGEL 100ML', 'INJ. PROVAS INFUSION 100ML', 'INJ. HAMILC 500ML', 'INJ. HAMICL 500ML', 'INJ. 5% D/W 1000ML', 'INJ. RLD 1000ML', '18G IV LINE', '20G IV LINE', '22G IV LINE', '24G IV LINE', 'B.T/SET', 'D/SET', 'D/S 5CC', 'D/S 10CC', 'D/S 20CC', 'D/S 50CC', 'O.T CAP', 'APREAN', 'S. GLOVES 7 1/2', 'S. GLOVES 6 1/2', 'XYLOCAINE GEL', 'LIGNOCAINE GEL', 'NELTON TUBE/10', 'NELTON TUBE/12', 'FEEDING TUBE/6/8', 'FEEDING TUBE/8', 'FEEDING TUBE/10', 'STOMACH TUBE/18', 'GAUZE PACKET', 'FOLEY\\'S CATHETER/16', 'FOLEY\\'S CATHETER/18', 'FOLEY\\'S CATHETER/20', 'FOLEY\\'S CATHETER/22', 'URINE BAG', 'DRAINAGE BAG', 'SPONGES', 'SILK NO.1', 'SILK NO.2/0', 'SILK NO.3/0', 'VICRYL NO.1', 'VICRYL NO.2', 'VICRYL NO.3/0', 'VICRYL NO.4/0', 'CATGUT NO.1', 'CATGUT NO.2/0', 'CATGUT NO.3/0', 'CATGUT NO.4/0', 'PROLINE 2/0', 'PROLINE 3/0', 'PROLINE 6/0', 'PROLINE 8/0', 'BILD NO.11', 'BILD NO.15', 'BILD NO.19', 'BILD NO.24', 'LOCAL 100CC'];\n      this.otForm = this.fb.group({\n        patientName: [''],\n        doctorName: [''],\n        operationDate: [''],\n        operationTime: [''],\n        roomNumber: [''],\n        includeMedicineHeader: ['withMedicine'],\n        products: this.fb.array(this.products.map(() => this.fb.group({\n          selected: [false],\n          quantity: ['']\n        })))\n      });\n    }\n    set selectedPatientId(selectedPatientId) {\n      if (selectedPatientId) {\n        this.indexedDb.getItem('otFormData').then(otFormData => {\n          if (otFormData) {\n            const patientData = otFormData.find(ot => ot.id === selectedPatientId);\n            if (patientData) {\n              this.editingId = patientData.id;\n              this.isEditMode = true;\n              this.otForm.patchValue({\n                patientName: patientData.patientName,\n                operationDate: patientData.operationDate,\n                operationTime: patientData.operationTime,\n                doctorName: patientData.doctorName,\n                roomNumber: patientData.roomNumber,\n                includeMedicineHeader: patientData.includeMedicineHeader || 'withMedicine'\n              });\n              const productArray = this.otForm.get('products');\n              patientData.products.forEach((product, index) => {\n                if (productArray.at(index)) {\n                  productArray.at(index).patchValue({\n                    selected: product.selected,\n                    quantity: product.quantity\n                  });\n                }\n              });\n            }\n          }\n        });\n      }\n    }\n    get productControls() {\n      return this.otForm.get('products');\n    }\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const saved = localStorage.getItem('otFormData');\n        this.otlist = saved ? JSON.parse(saved) : [];\n      });\n    }\n    submitForm() {\n      const formValue = this.otForm.value;\n      const selectedProducts = formValue.products.map((item, i) => ({\n        name: this.products[i],\n        selected: item.selected,\n        quantity: item.quantity\n      })).filter(p => p.selected && p.quantity);\n      const record = Object.assign(Object.assign({}, formValue), {\n        products: selectedProducts,\n        id: this.editingId || 'form-' + Math.random().toString(36).substr(2, 9)\n      });\n      if (this.isEditMode && this.editingId) {\n        this.otlist = this.otlist.map(item => item.id === this.editingId ? record : item);\n      } else {\n        this.otlist.push(record);\n      }\n      localStorage.setItem('otFormData', JSON.stringify(this.otlist));\n      this.printPage();\n      this.otForm.reset();\n      this.isEditMode = false;\n      this.router.navigate(['/home']);\n    }\n    cancelForm() {\n      this.otForm.reset();\n      this.isEditMode = false;\n      this.editingId = null;\n      this.router.navigate(['/home']);\n      this.isCancelForm.emit(true);\n      console.log('Form cancelled.');\n    }\n    printPage() {\n      const printContent = document.getElementById('ot-form');\n      if (printContent) {\n        const win = window.open('', '', 'width=1000,height=800');\n        if (win) {\n          const styles = `\n          <style>\n            body {\n              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n              padding: 40px;\n              background: #fdfdfd;\n              color: #222;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n            }\n            .header h2 {\n              margin: 0;\n              font-size: 24px;\n              color: #2c3e50;\n            }\n            .header h4 {\n              margin: 5px 0 0;\n              font-size: 18px;\n              color: #16a085;\n            }\n            .section {\n              border: 1px solid #ccc;\n              border-radius: 10px;\n              padding: 20px;\n              margin-bottom: 20px;\n              background-color: #f9f9f9;\n              box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n            }\n            .section h4 {\n              margin-bottom: 15px;\n              border-bottom: 1px solid #ddd;\n              padding-bottom: 5px;\n              color: #2980b9;\n            }\n            .info-row {\n              margin: 10px 0;\n              font-size: 15px;\n            }\n            .info-row .label {\n              font-weight: bold;\n              display: inline-block;\n              width: 150px;\n              color: #34495e;\n            }\n            ul {\n              padding-left: 20px;\n              margin: 0;\n            }\n            li {\n              margin: 5px 0;\n              font-size: 14px;\n              display: flex;\n              justify-content: space-between;\n              padding: 10px;\n              border-bottom: 1px solid #ddd;\n            }\n            .footer {\n              text-align: center;\n              margin-top: 40px;\n              font-size: 13px;\n              color: #999;\n            }\n            .products-list {\n              display: flex;\n              flex-wrap: wrap;\n              gap: 20px;\n            }\n            .product-item {\n              width: calc(50% - 10px);\n              padding: 10px;\n              border-radius: 8px;\n              background: #fff;\n              box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n              margin-bottom: 10px;\n              display: flex;\n              justify-content: space-between;\n              font-size: 14px;\n            }\n            .product-name {\n              font-weight: bold;\n              color: #2980b9;\n            }\n            .product-quantity {\n              font-size: 14px;\n              color: #34495e;\n            }\n          </style>\n        `;\n          const externalStyles = `\n          <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/primeng/resources/themes/saga-blue/theme.css\">\n          <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/primeng/resources/primeng.min.css\">\n          <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/primeicons/primeicons.css\">\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n          <link rel=\"stylesheet\" href=\"assets/styles.css\">\n        `;\n          win.document.write(`\n          <html>\n            <head>\n              <title>OT Slip</title>\n              ${externalStyles}\n              ${styles}\n            </head>\n            <body>\n              <div class=\"header\">\n                <h2>Ahmmad Pharmacy</h2>\n                <h4>OT Medicine List</h4>\n              </div>\n  \n              <div class=\"section\">\n                <h4>Operation Details</h4>\n                <div class=\"info-row\"><span class=\"label\">Doctor:</span> ${this.otForm.value.doctorName}</div>\n                <div class=\"info-row\"><span class=\"label\">Date:</span> ${this.otForm.value.operationDate}</div>\n                <div class=\"info-row\"><span class=\"label\">Time:</span> ${this.otForm.value.operationTime}</div>\n                <div class=\"info-row\"><span class=\"label\">Room:</span> ${this.otForm.value.roomNumber}</div>\n                <div class=\"info-row\"><span class=\"label\">Medicine Header:</span> ${this.otForm.value.includeMedicineHeader}</div>\n              </div>\n  \n              <div class=\"section\">\n                <h4>Selected Products</h4>\n                <div class=\"products-list\">\n                  ${this.getSelectedProductsForPrint()}\n                </div>\n              </div>\n  \n              <div class=\"footer\">\n                Printed on: ${new Date().toLocaleString()}\n              </div>\n            </body>\n          </html>\n        `);\n          win.document.close();\n          setTimeout(() => {\n            win.print();\n            win.close();\n          }, 500);\n        }\n      }\n    }\n    getSelectedProductsForPrint() {\n      return this.productControls.controls.map((ctrl, i) => {\n        const {\n          selected,\n          quantity\n        } = ctrl.value;\n        if (selected && quantity) {\n          return `\n            <div class=\"product-item\">\n              <span class=\"product-name\">${this.products[i]}</span>\n              <span class=\"product-quantity\">Quantity: ${quantity}</span>\n            </div>\n          `;\n        }\n        return '';\n      }).filter(item => item).join('');\n    }\n  }\n  OtFormComponent.ɵfac = function OtFormComponent_Factory(t) {\n    return new (t || OtFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.IndexedDbService));\n  };\n  OtFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OtFormComponent,\n    selectors: [[\"app-ot-form\"]],\n    inputs: {\n      selectedPatientId: \"selectedPatientId\"\n    },\n    outputs: {\n      isCancelForm: \"isCancelForm\"\n    },\n    decls: 43,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [\"id\", \"ot-form\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"patientName\"], [\"matInput\", \"\", \"formControlName\", \"doctorName\"], [\"matInput\", \"\", \"formControlName\", \"roomNumber\"], [\"matInput\", \"\", \"type\", \"date\", \"formControlName\", \"operationDate\"], [\"matInput\", \"\", \"type\", \"time\", \"formControlName\", \"operationTime\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"formControlName\", \"includeMedicineHeader\"], [\"value\", \"withMedicine\"], [\"value\", \"withoutMedicine\"], [\"formArrayName\", \"products\", 1, \"product-list\"], [\"class\", \"product-item\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"product-item\", 3, \"formGroupName\"], [\"formControlName\", \"selected\"], [\"appearance\", \"outline\", 1, \"quantity-field\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"quantity\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n    template: function OtFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-card\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Ahmmad Pharmacy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"OT Medicine List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"mat-form-field\", 2)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Patient Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 2)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Doctor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\", 2)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Room Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 2)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Operation Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-form-field\", 2)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Operation Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-form-field\", 8)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Medicine Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-select\", 9)(32, \"mat-option\", 10);\n        i0.ɵɵtext(33, \"With Medicine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-option\", 11);\n        i0.ɵɵtext(35, \"Without Medicine\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"div\", 12);\n        i0.ɵɵtemplate(37, OtFormComponent_div_37_Template, 7, 2, \"div\", 13);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"mat-card-actions\");\n        i0.ɵɵtemplate(39, OtFormComponent_button_39_Template, 2, 0, \"button\", 14);\n        i0.ɵɵtemplate(40, OtFormComponent_button_40_Template, 2, 0, \"button\", 15);\n        i0.ɵɵelementStart(41, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function OtFormComponent_Template_button_click_41_listener() {\n          return ctx.cancelForm();\n        });\n        i0.ɵɵtext(42, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.otForm);\n        i0.ɵɵadvance(37);\n        i0.ɵɵproperty(\"ngForOf\", ctx.productControls.controls);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isEditMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEditMode);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.MatButton, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardTitle, i7.MatFormField, i7.MatLabel, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i8.MatInput, i9.MatSelect, i10.MatOption, i11.MatCheckbox],\n    styles: [\"@media print{body[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{visibility:hidden}#ot-form[_ngcontent-%COMP%], #ot-form[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{visibility:visible}#ot-form[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%}}.product-list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:16px}.product-item[_ngcontent-%COMP%]{width:48%;display:flex;align-items:center;gap:8px}.quantity-field[_ngcontent-%COMP%]{flex:1}@media (max-width: 600px){.product-item[_ngcontent-%COMP%]{width:100%;flex-direction:column;align-items:flex-start}.quantity-field[_ngcontent-%COMP%]{width:100%}}.product-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between}.product-item[_ngcontent-%COMP%]{width:48%;margin-bottom:20px;box-sizing:border-box}\"]\n  });\n  return OtFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}