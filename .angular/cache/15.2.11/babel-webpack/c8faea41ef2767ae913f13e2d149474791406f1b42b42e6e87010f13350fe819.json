{"ast":null,"code":"import { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/validators.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/radio\";\nimport * as i11 from \"@angular/material/datepicker\";\nimport * as i12 from \"../../../Pipes/age-pipe.pipe\";\nfunction PatientEditComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"firstname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"only alphabets are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"lastname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"only alphabets are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Dr. Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"only alphabets are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"date of birth is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"invalid date of birth\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"age is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"marital status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"phone No. is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"inavlid number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"email is not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"state is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"only alphabets are allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientEditComponent_mat_error_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let PatientEditComponent = /*#__PURE__*/(() => {\n  class PatientEditComponent {\n    constructor(fb, fv, dialogRef, patientDetails) {\n      this.fb = fb;\n      this.fv = fv;\n      this.dialogRef = dialogRef;\n      this.edit = false;\n      this.tempAge = null;\n      this.tempDate = null;\n      this.patientDetails = patientDetails;\n      if (patientDetails.patientId) {\n        this.edit = true;\n        this.tempAge = this.patientDetails.age;\n        this.tempDate = formatDate(this.patientDetails.dob, 'yyyy-MM-dd', 'en');\n      } else {\n        this.patientDetails.gender = \"Male\";\n      }\n      this.patientForm = this.fb.group({\n        patientDetail: this.fb.group({\n          patientId: [{\n            value: this.patientDetails.patientId || Math.floor(100000 + Math.random() * 900000),\n            disabled: true\n          }],\n          fullName: this.fb.group({\n            firstName: [this.patientDetails.firstName, [Validators.required]],\n            lastName: [this.patientDetails.lastName, [Validators.required]],\n            drName: [this.patientDetails.drName, [Validators.required]]\n          }),\n          bioDetail: this.fb.group({\n            gender: [this.patientDetails.gender, Validators.required],\n            age: [this.tempAge, Validators.required],\n            dob: [this.tempDate, [Validators.required, this.fv.invalidDOB.bind(this)]]\n          }),\n          familyStatus: this.fb.group({\n            maritalStatus: [this.patientDetails.maritalStatus, Validators.required]\n          }),\n          socialDetail: this.fb.group({\n            phone: [this.patientDetails.phone, [Validators.required]],\n            email: [this.patientDetails.email, [Validators.required, Validators.pattern('[a-zA-Z0-9]+@[a-zA-Z]+[.]{1}[a-zA-Z]+')]]\n          }),\n          addressDetail: this.fb.group({\n            state: [this.patientDetails.state, [Validators.required, Validators.pattern('[a-z A-Z]+')]],\n            address: [this.patientDetails.address, Validators.required]\n          })\n        })\n      });\n    }\n    // getters for form inputs\n    get a() {\n      return this.patientForm.controls;\n    }\n    get b() {\n      return this.patientForm.get('patientDetail').controls;\n    }\n    get c() {\n      return this.patientForm.get('patientDetail').get('fullName').controls;\n    }\n    get d() {\n      return this.patientForm.get('patientDetail').get('bioDetail').controls;\n    }\n    get e() {\n      return this.patientForm.get('patientDetail').get('familyStatus').controls;\n    }\n    get f() {\n      return this.patientForm.get('patientDetail').get('socialDetail').controls;\n    }\n    get g() {\n      return this.patientForm.get('patientDetail').get('addressDetail').controls;\n    }\n    // form submit function\n    onSubmit() {\n      if (!this.patientForm.invalid) {\n        let choice = true;\n        if (this.patientForm.dirty) choice = confirm(\"Submitting Patinent Form\");\n        if (choice) {\n          this.patientForm.enable();\n          let result = this.ResultRefactoring();\n          this.dialogRef.close(result);\n        }\n      }\n    }\n    close() {\n      let choice = true;\n      if (this.patientForm.dirty) choice = confirm(\"Closing Without Saving changes\");\n      if (choice) this.dialogRef.close();\n    }\n    ResultRefactoring() {\n      console.log(this.d['age'].value, \"this.d['age'].value\");\n      let tempPatient = {\n        patientId: this.b['patientId'].value,\n        firstName: this.c['firstName'].value,\n        lastName: this.c['lastName'].value,\n        drName: this.c['drName'].value,\n        gender: this.d['gender'].value,\n        age: this.d['age'].value,\n        maritalStatus: this.e['maritalStatus'].value,\n        dob: this.d['dob'].value,\n        phone: this.f['phone'].value,\n        email: this.f['email'].value,\n        state: this.g['state'].value,\n        address: this.g['address'].value\n      };\n      return tempPatient;\n    }\n  }\n  PatientEditComponent.ɵfac = function PatientEditComponent_Factory(t) {\n    return new (t || PatientEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ValidatorsService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  PatientEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PatientEditComponent,\n    selectors: [[\"app-patient-edit\"]],\n    decls: 91,\n    vars: 24,\n    consts: [[\"mat-dialog-title\", \"\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"formGroupName\", \"patientDetail\", 1, \"outer-input-section\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"patientId\"], [\"formGroupName\", \"fullName\", 1, \"input-section\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"firstName\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"drName\"], [\"formGroupName\", \"bioDetail\", 1, \"input-section\"], [\"formControlName\", \"gender\", 1, \"radio-group\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"matInput\", \"\", \"formControlName\", \"dob\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"age\", 3, \"value\"], [\"formGroupName\", \"familyStatus\", 1, \"input-section\"], [\"formControlName\", \"maritalStatus\"], [\"value\", \"Single\"], [\"value\", \"Married\"], [\"formGroupName\", \"socialDetail\", 1, \"input-section\"], [\"matInput\", \"\", \"type\", \"tel\", \"formControlName\", \"phone\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\"], [\"formGroupName\", \"addressDetail\", 1, \"input-section\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"state\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"address\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\"]],\n    template: function PatientEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function PatientEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"mat-dialog-content\")(4, \"div\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"PatientId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"mat-form-field\", 3)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵtemplate(14, PatientEditComponent_mat_error_14_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(15, PatientEditComponent_mat_error_15_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\", 3)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Father Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵtemplate(20, PatientEditComponent_mat_error_20_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(21, PatientEditComponent_mat_error_21_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\", 3)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Dr. Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 9);\n        i0.ɵɵtemplate(26, PatientEditComponent_mat_error_26_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(27, PatientEditComponent_mat_error_27_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 10)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-radio-group\", 11)(32, \"mat-radio-button\", 12);\n        i0.ɵɵtext(33, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-radio-button\", 13);\n        i0.ɵɵtext(35, \"Female\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"mat-form-field\", 3)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Date Of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 14)(40, \"mat-datepicker-toggle\", 15)(41, \"mat-datepicker\", null, 16);\n        i0.ɵɵtemplate(43, PatientEditComponent_mat_error_43_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(44, PatientEditComponent_mat_error_44_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-form-field\", 3)(46, \"mat-label\");\n        i0.ɵɵtext(47, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"input\", 17);\n        i0.ɵɵpipe(49, \"agePipe\");\n        i0.ɵɵtemplate(50, PatientEditComponent_mat_error_50_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"div\", 18)(52, \"mat-form-field\", 3)(53, \"mat-label\");\n        i0.ɵɵtext(54, \"Marital Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"mat-select\", 19)(56, \"mat-option\", 20);\n        i0.ɵɵtext(57, \"Single\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"mat-option\", 21);\n        i0.ɵɵtext(59, \"Married\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(60, PatientEditComponent_mat_error_60_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 22)(62, \"mat-form-field\", 3)(63, \"mat-label\");\n        i0.ɵɵtext(64, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(65, \"input\", 23);\n        i0.ɵɵtemplate(66, PatientEditComponent_mat_error_66_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(67, PatientEditComponent_mat_error_67_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"mat-form-field\", 3)(69, \"mat-label\");\n        i0.ɵɵtext(70, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(71, \"input\", 24);\n        i0.ɵɵtemplate(72, PatientEditComponent_mat_error_72_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(73, PatientEditComponent_mat_error_73_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(74, \"div\", 25)(75, \"mat-form-field\", 3)(76, \"mat-label\");\n        i0.ɵɵtext(77, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(78, \"input\", 26);\n        i0.ɵɵtemplate(79, PatientEditComponent_mat_error_79_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(80, PatientEditComponent_mat_error_80_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"mat-form-field\", 3)(82, \"mat-label\");\n        i0.ɵɵtext(83, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(84, \"textarea\", 27);\n        i0.ɵɵtemplate(85, PatientEditComponent_mat_error_85_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(86, \"mat-dialog-actions\")(87, \"button\", 28);\n        i0.ɵɵtext(88, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(89, \"button\", 29);\n        i0.ɵɵlistener(\"click\", function PatientEditComponent_Template_button_click_89_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(90, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r6 = i0.ɵɵreference(42);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.edit ? \"Update Operation Patient Data\" : \"Add New Operation Patient\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.patientForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.firstName.errors == null ? null : ctx.c.firstName.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.firstName.errors == null ? null : ctx.c.firstName.errors.pattern);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.lastName.errors == null ? null : ctx.c.lastName.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.lastName.errors == null ? null : ctx.c.lastName.errors.pattern);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.drName.errors == null ? null : ctx.c.drName.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.c.drName.errors == null ? null : ctx.c.drName.errors.pattern);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"matDatepicker\", _r6);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r6);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.d.dob.errors == null ? null : ctx.d.dob.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.d.dob.errors == null ? null : ctx.d.dob.errors.invalidDOB);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind1(49, 22, ctx.d.dob.value));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.d.age.errors == null ? null : ctx.d.age.errors.required);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.e.maritalStatus.errors == null ? null : ctx.e.maritalStatus.errors.required);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.phone.errors == null ? null : ctx.f.phone.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.phone.errors == null ? null : ctx.f.phone.errors.pattern);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.email.errors == null ? null : ctx.f.email.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.email.errors == null ? null : ctx.f.email.errors.pattern);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.g.state.errors == null ? null : ctx.g.state.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.g.state.errors == null ? null : ctx.g.state.errors.pattern);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.g.address.errors == null ? null : ctx.g.address.errors.required);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatButton, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i7.MatInput, i8.MatSelect, i9.MatOption, i10.MatRadioGroup, i10.MatRadioButton, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i11.MatDatepicker, i11.MatDatepickerInput, i11.MatDatepickerToggle, i12.AgePipePipe],\n    styles: [\".outer-input-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:sp;margin:5px 0;flex-wrap:wrap}.input-section[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;margin:5px 0;flex-wrap:wrap}.input-section[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{flex-grow:1;margin:0 20px}.title[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:flex-start;margin-bottom:10px;font-size:20px;font-weight:500}.radio-group[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:not(:last-child){margin-right:5px;margin-bottom:10px}\"]\n  });\n  return PatientEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}