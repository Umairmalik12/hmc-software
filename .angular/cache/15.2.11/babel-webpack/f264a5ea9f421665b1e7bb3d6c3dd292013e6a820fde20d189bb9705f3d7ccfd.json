{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { LabEditComponent } from '../lab-edit/lab-edit.component';\nimport { LabPatientDataService } from 'src/app/Services/lab-data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/lab.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/paginator\";\nimport * as i4 from \"src/app/Services/notify-update.service\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/common\";\nfunction LabListComponent_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Patient ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(lab_r16.patientId);\n  }\n}\nfunction LabListComponent_mat_header_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(lab_r17.name);\n  }\n}\nfunction LabListComponent_mat_header_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Test Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(lab_r18.testName);\n  }\n}\nfunction LabListComponent_mat_header_cell_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Price\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind4(2, 1, lab_r19.price, \"PKR\", \"symbol\", \"1.0-0\"));\n  }\n}\nfunction LabListComponent_mat_header_cell_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Suggested Dr\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(lab_r20.suggestedDr);\n  }\n}\nfunction LabListComponent_mat_header_cell_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Appointment Date\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lab_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, lab_r21.dateTime, \"short\"));\n  }\n}\nfunction LabListComponent_mat_header_cell_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Action\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabListComponent_mat_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"div\", 14)(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LabListComponent_mat_cell_24_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const lab_r22 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.editLabPatient(lab_r22.patientId));\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function LabListComponent_mat_cell_24_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const lab_r22 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.deleteLabPatient(lab_r22.patientId));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction LabListComponent_mat_header_row_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction LabListComponent_mat_row_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\", 17);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 15, 20];\n};\nexport let LabListComponent = /*#__PURE__*/(() => {\n  class LabListComponent {\n    constructor(labService, dialog, intl, changeDetectorRef, notifyUpdate) {\n      this.labService = labService;\n      this.dialog = dialog;\n      this.intl = intl;\n      this.changeDetectorRef = changeDetectorRef;\n      this.notifyUpdate = notifyUpdate;\n      this.patient = [];\n      this.dataSource = new LabPatientDataService(this.labService);\n      this.displayedColumns = ['patientId', 'name', 'testName', 'price', 'suggestedDr', 'dateTime', 'action'];\n      this.tempLabPatient = {\n        patientId: 0,\n        price: 0,\n        suggestedDr: '',\n        dateTime: new Date(),\n        name: '',\n        phone: '',\n        testName: ''\n      };\n      this.total = 0;\n      this.paginator = new MatPaginator(this.intl, this.changeDetectorRef);\n      this.notifyUpdate.notify.subscribe(() => {\n        this.dataActions('', 'asc', 0, 5);\n      });\n    }\n    ngOnInit() {\n      this.dataActions('', 'asc', 0, 5);\n    }\n    ngAfterViewInit() {\n      this.paginator.page.subscribe(() => {\n        this.dataActions('', 'asc', this.paginator.pageIndex, this.paginator.pageSize);\n      });\n    }\n    dataActions(a, b, c, d) {\n      this.dataSource.loadLabPatient(a, b, c, d);\n      this.paginator.pageIndex = c;\n      this.paginator.pageSize = d;\n      this.total = this.labService.total;\n    }\n    editLabPatient(id) {\n      this.labService.getLabPatientDetails(id).subscribe(data => {\n        this.tempLabPatient = data;\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n        dialogConfig.data = Object.assign({}, data);\n        const dialogRef = this.dialog.open(LabEditComponent, dialogConfig);\n        dialogRef.afterClosed().subscribe(data => {\n          if (data) {\n            console.log(\"data\", data);\n            this.labService.updateLabPatient(data).subscribe(success => {\n              let msg = \" Something went wrong\";\n              let type = \"error\";\n              if (success) {\n                this.notifyUpdate.notify.next(true);\n                msg = \"Lab Patient Data Updated Successfully\";\n                type = \"success\";\n              }\n              this.notifyUpdate.alertNotify.next({\n                msg,\n                type\n              });\n            });\n          }\n        });\n      });\n    }\n    deleteLabPatient(id) {\n      if (confirm('Are you sure you want to delete this lab patient?')) {\n        this.labService.deleteLabPatient(id).subscribe({\n          next: success => {\n            if (success) {\n              this.notifyUpdate.notify.next(true);\n              this.notifyUpdate.alertNotify.next({\n                msg: 'Lab Patient deleted successfully',\n                type: 'success'\n              });\n            } else {\n              this.notifyUpdate.alertNotify.next({\n                msg: 'Failed to delete patient',\n                type: 'error'\n              });\n            }\n          },\n          error: () => {\n            this.notifyUpdate.alertNotify.next({\n              msg: 'An error occurred during deletion',\n              type: 'error'\n            });\n          }\n        });\n      }\n    }\n  }\n  LabListComponent.ɵfac = function LabListComponent_Factory(t) {\n    return new (t || LabListComponent)(i0.ɵɵdirectiveInject(i1.LabService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatPaginatorIntl), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.NotifyUpdateService));\n  };\n  LabListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LabListComponent,\n    selectors: [[\"app-lab-list\"]],\n    viewQuery: function LabListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 28,\n    vars: 7,\n    consts: [[1, \"body\"], [1, \"lab-table\", \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"patientId\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"testName\"], [\"matColumnDef\", \"price\"], [\"matColumnDef\", \"suggestedDr\"], [\"matColumnDef\", \"dateTime\"], [\"matColumnDef\", \"action\"], [4, \"matHeaderRowDef\"], [\"class\", \"table-row\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"page\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"], [1, \"action-buttons\"], [\"mat-button\", \"\", 1, \"mat-raised-button\", \"mat-primary\", \"table-btn\", 3, \"click\"], [\"mat-button\", \"\", 1, \"mat-raised-button\", \"mat-warn\", \"table-btn\", 3, \"click\"], [1, \"table-row\"]],\n    template: function LabListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Lab Patient Test List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-table\", 1);\n        i0.ɵɵelementContainerStart(4, 2);\n        i0.ɵɵtemplate(5, LabListComponent_mat_header_cell_5_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(6, LabListComponent_mat_cell_6_Template, 2, 1, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(7, 5);\n        i0.ɵɵtemplate(8, LabListComponent_mat_header_cell_8_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(9, LabListComponent_mat_cell_9_Template, 2, 1, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(10, 6);\n        i0.ɵɵtemplate(11, LabListComponent_mat_header_cell_11_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(12, LabListComponent_mat_cell_12_Template, 2, 1, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(13, 7);\n        i0.ɵɵtemplate(14, LabListComponent_mat_header_cell_14_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(15, LabListComponent_mat_cell_15_Template, 3, 6, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(16, 8);\n        i0.ɵɵtemplate(17, LabListComponent_mat_header_cell_17_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(18, LabListComponent_mat_cell_18_Template, 2, 1, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(19, 9);\n        i0.ɵɵtemplate(20, LabListComponent_mat_header_cell_20_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(21, LabListComponent_mat_cell_21_Template, 3, 4, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(22, 10);\n        i0.ɵɵtemplate(23, LabListComponent_mat_header_cell_23_Template, 2, 0, \"mat-header-cell\", 3);\n        i0.ɵɵtemplate(24, LabListComponent_mat_cell_24_Template, 8, 0, \"mat-cell\", 4);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(25, LabListComponent_mat_header_row_25_Template, 1, 0, \"mat-header-row\", 11);\n        i0.ɵɵtemplate(26, LabListComponent_mat_row_26_Template, 1, 0, \"mat-row\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(27, \"mat-paginator\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.total)(\"pageSize\", 5)(\"pageSizeOptions\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    dependencies: [i5.MatButton, i6.MatIcon, i7.MatTable, i7.MatHeaderCellDef, i7.MatHeaderRowDef, i7.MatColumnDef, i7.MatCellDef, i7.MatRowDef, i7.MatHeaderCell, i7.MatCell, i7.MatHeaderRow, i7.MatRow, i3.MatPaginator, i8.CurrencyPipe, i8.DatePipe],\n    styles: [\".body[_ngcontent-%COMP%]{margin:20px;padding:20px;overflow-x:auto;background-color:#f9f9f9;border-radius:8px}.lab-table[_ngcontent-%COMP%]{width:100%;min-width:600px;border-collapse:collapse;box-shadow:0 4px 8px #0000001a;background-color:#fff;border-radius:8px;overflow:hidden}.mat-header-cell[_ngcontent-%COMP%]{padding:14px 16px;font-size:16px;font-weight:700;color:#333;background:linear-gradient(90deg,#ff6f61,#ff8a65);color:#fff;text-align:left;border-bottom:2px solid #ddd}.page[_ngcontent-%COMP%]{margin:20px auto;display:flex;justify-content:center}@media screen and (max-width: 840px){.lab-table[_ngcontent-%COMP%]{min-width:100%}.mat-header-cell[_ngcontent-%COMP%], .mat-cell[_ngcontent-%COMP%]{padding:8px;font-size:12px}.table-btn[_ngcontent-%COMP%]{font-size:12px;padding:5px 10px}}.mat-cell[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:8px;white-space:nowrap}.table-btn[_ngcontent-%COMP%]{font-size:14px;padding:8px 16px;min-width:100px;text-align:center!important;border-radius:6px;text-transform:uppercase;transition:background-color .3s ease,transform .2s ease;display:inline-block}.mat-cell[_ngcontent-%COMP%]{padding:12px 16px;font-size:14px;color:#555;border-bottom:1px solid #eee;display:flex;justify-content:space-between}@media screen and (max-width: 840px){.mat-cell[_ngcontent-%COMP%]   .action-buttons[_ngcontent-%COMP%]{flex-direction:column;gap:12px}.table-btn[_ngcontent-%COMP%]{font-size:12px;padding:6px 12px;min-width:80px}}\"]\n  });\n  return LabListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}