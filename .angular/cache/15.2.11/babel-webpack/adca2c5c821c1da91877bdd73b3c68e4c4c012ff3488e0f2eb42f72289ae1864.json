{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LabService = /*#__PURE__*/(() => {\n  class LabService {\n    constructor() {\n      this.total = 0;\n      this.labDetail = [];\n      this.loadLabData();\n    }\n    loadLabData() {\n      const storedPatients = localStorage.getItem('labDetails');\n      if (storedPatients) {\n        this.labDetail = JSON.parse(storedPatients);\n      } else {\n        this.labDetail = [];\n      }\n    }\n    // Method to save data to localStorage\n    saveLabData() {\n      localStorage.setItem('labDetails', JSON.stringify(this.labDetail));\n    }\n    getAllLabPatient() {\n      let labPatientList = this.getLabPatientBrief();\n      this.total = this.labDetail.length;\n      return new Observable(obs => {\n        obs.next(labPatientList);\n      });\n    }\n    findLabPatients(filter = '', sortOrder = 'asc', pageNumber = 0, pageSize = 5) {\n      this.total = this.labDetail.length;\n      let lab = this.getLabPatientBrief();\n      let start = pageNumber * pageSize;\n      let n = start + pageSize;\n      let end = n < lab.length ? n : lab.length;\n      let temp = lab.slice(start, end);\n      return new Observable(obs => {\n        obs.next(temp);\n      });\n    }\n    getLabPatientDetails(id) {\n      return new Observable(obs => {\n        let temp = this.labDetail.find(o => o.patientId == id);\n        obs.next(temp);\n      });\n    }\n    addNewLabPatient(data) {\n      var _a, _b, _c;\n      try {\n        // Generate a new patient ID\n        let id = ((_b = (_a = this.labDetail) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0 ? ((_c = this.labDetail[this.labDetail.length - 1].patientId) !== null && _c !== void 0 ? _c : 0) + 1 : 1;\n        data.patientId = id;\n        // Add the new patient to the list\n        this.labDetail.push(data);\n        // Save the updated list to localStorage\n        this.saveLabData();\n        return true;\n      } catch (e) {\n        console.error('Error adding new patient:', e);\n        return false;\n      }\n    }\n    updateLabPatient(data) {\n      try {\n        let i = this.labDetail.findIndex(o => o.patientId == data.patientId);\n        if (i !== -1) {\n          this.labDetail[i] = data;\n          this.saveLabData();\n          return true;\n        }\n        return false;\n      } catch (e) {\n        console.error('Error updating patient:', e);\n        return false;\n      }\n    }\n    getLabPatientBrief() {\n      let labList = [];\n      const storedLabPatients = localStorage.getItem('labDetails');\n      const labPatients = storedLabPatients ? JSON.parse(storedLabPatients) : [];\n      labPatients.forEach(data => labList.push({\n        patientId: data.patientId,\n        name: data.name,\n        phone: data.phone,\n        testName: data.testName,\n        price: data.price,\n        suggestedDr: data.suggestedDr,\n        dateTime: data.dateTime\n      }));\n      this.labDetail = labPatients;\n      return labList;\n    }\n  }\n  LabService.ɵfac = function LabService_Factory(t) {\n    return new (t || LabService)();\n  };\n  LabService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LabService,\n    factory: LabService.ɵfac,\n    providedIn: 'root'\n  });\n  return LabService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}