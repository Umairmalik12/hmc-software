{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./lab.service\";\nexport let LabPatientDataService = /*#__PURE__*/(() => {\n  class LabPatientDataService {\n    constructor(labPatientService) {\n      this.labPatientService = labPatientService;\n      this.labSubject = new BehaviorSubject([]);\n    }\n    loadLabPatient(filter, sortDirection, pageIndex, pageSize) {\n      this.labPatientService.findLabPatients(filter, sortDirection, pageIndex, pageSize).pipe(catchError(() => of([]))).subscribe(labPatient => this.labSubject.next(labPatient));\n    }\n    connect(collectionViewer) {\n      return this.labSubject.asObservable();\n    }\n    disconnect(collectionViewer) {\n      this.labSubject.complete();\n    }\n  }\n  LabPatientDataService.ɵfac = function LabPatientDataService_Factory(t) {\n    return new (t || LabPatientDataService)(i0.ɵɵinject(i1.LabService));\n  };\n  LabPatientDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LabPatientDataService,\n    factory: LabPatientDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return LabPatientDataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}