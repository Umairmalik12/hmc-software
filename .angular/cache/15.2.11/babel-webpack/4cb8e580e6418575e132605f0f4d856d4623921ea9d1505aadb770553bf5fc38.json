{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nfunction PaymentComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-form-field\", 7)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Cash Return\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r0.cashReturn);\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Patient Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payment_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", payment_r18.patientName, \" \");\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Amount \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payment_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Rs\", payment_r19.amount, \" \");\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Cash Given \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payment_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" RS\", payment_r20.cashGiven, \" \");\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Cash Return \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payment_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Rs\", payment_r21.cashReturn, \" \");\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Payment Method \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const payment_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", payment_r22.paymentMethod, \" \");\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 41)(1, \"mat-select\", 42);\n    i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_mat_card_content_53_td_21_Template_mat_select_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const payment_r23 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(payment_r23.paymentStatus = $event);\n    })(\"selectionChange\", function PaymentComponent_mat_card_content_53_td_21_Template_mat_select_selectionChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const payment_r23 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.updatePaymentStatus(payment_r23.id, $event.value));\n    });\n    i0.ɵɵelementStart(2, \"mat-option\", 18);\n    i0.ɵɵtext(3, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-option\", 19);\n    i0.ɵɵtext(5, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-option\", 20);\n    i0.ɵɵtext(7, \"Failed\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const payment_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", payment_r23.paymentStatus);\n  }\n}\nfunction PaymentComponent_mat_card_content_53_th_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40);\n    i0.ɵɵtext(1, \" Actions \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_td_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 41)(1, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function PaymentComponent_mat_card_content_53_td_24_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const payment_r27 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.showReceipt(payment_r27));\n    });\n    i0.ɵɵtext(2, \"Print Receipt\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PaymentComponent_mat_card_content_53_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 44);\n  }\n}\nfunction PaymentComponent_mat_card_content_53_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 45);\n  }\n}\nfunction PaymentComponent_mat_card_content_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-content\", 27)(1, \"h3\");\n    i0.ɵɵtext(2, \"Payment History\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 28);\n    i0.ɵɵelementContainerStart(4, 29);\n    i0.ɵɵtemplate(5, PaymentComponent_mat_card_content_53_th_5_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(6, PaymentComponent_mat_card_content_53_td_6_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 32);\n    i0.ɵɵtemplate(8, PaymentComponent_mat_card_content_53_th_8_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(9, PaymentComponent_mat_card_content_53_td_9_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 33);\n    i0.ɵɵtemplate(11, PaymentComponent_mat_card_content_53_th_11_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(12, PaymentComponent_mat_card_content_53_td_12_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(13, 34);\n    i0.ɵɵtemplate(14, PaymentComponent_mat_card_content_53_th_14_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(15, PaymentComponent_mat_card_content_53_td_15_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(16, 35);\n    i0.ɵɵtemplate(17, PaymentComponent_mat_card_content_53_th_17_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(18, PaymentComponent_mat_card_content_53_td_18_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(19, 36);\n    i0.ɵɵtemplate(20, PaymentComponent_mat_card_content_53_th_20_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(21, PaymentComponent_mat_card_content_53_td_21_Template, 8, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(22, 37);\n    i0.ɵɵtemplate(23, PaymentComponent_mat_card_content_53_th_23_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(24, PaymentComponent_mat_card_content_53_td_24_Template, 3, 0, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(25, PaymentComponent_mat_card_content_53_tr_25_Template, 1, 0, \"tr\", 38);\n    i0.ɵɵtemplate(26, PaymentComponent_mat_card_content_53_tr_26_Template, 1, 0, \"tr\", 39);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.payments);\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.displayedColumns);\n  }\n}\nexport let PaymentComponent = /*#__PURE__*/(() => {\n  class PaymentComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.payments = [];\n      this.displayedColumns = ['patientName', 'amount', 'cashGiven', 'cashReturn', 'paymentMethod', 'paymentStatus', 'actions'];\n      this.cashReturn = 0;\n      this.patientId = '';\n    }\n    ngOnInit() {\n      // Load payments from localStorage on component load\n      this.loadPayments();\n      // Initialize payment form\n      this.paymentForm = this.fb.group({\n        patientName: ['', Validators.required],\n        patientId: [{\n          value: this.generatePatientId(),\n          disabled: true\n        }, Validators.required],\n        amount: [null, [Validators.required, Validators.min(0)]],\n        cashGiven: [null, [Validators.required, Validators.min(0)]],\n        paymentMethod: ['', Validators.required],\n        paymentStatus: ['', Validators.required]\n      });\n      // Refresh payment list whenever the form is reset\n      this.paymentForm.valueChanges.subscribe(() => {\n        this.refreshPaymentList();\n      });\n    }\n    // Automatically generate a unique Patient ID\n    generatePatientId() {\n      const randomId = 'P-' + Math.random().toString(36).substr(2, 9); // Generate a random ID prefixed with 'P-'\n      this.patientId = randomId;\n      return this.patientId;\n    }\n    // Load payments from localStorage\n    loadPayments() {\n      const storedPayments = localStorage.getItem('payments');\n      if (storedPayments) {\n        this.payments = JSON.parse(storedPayments);\n      }\n    }\n    // Calculate cash return when Cash Given changes\n    calculateCashReturn() {\n      var _a, _b;\n      const amount = ((_a = this.paymentForm.get('amount')) === null || _a === void 0 ? void 0 : _a.value) || 0;\n      const cashGiven = ((_b = this.paymentForm.get('cashGiven')) === null || _b === void 0 ? void 0 : _b.value) || 0;\n      if (cashGiven >= amount) {\n        this.cashReturn = cashGiven - amount;\n      } else {\n        this.cashReturn = 0;\n      }\n    }\n    // Process Payment\n    processPayment() {\n      if (this.paymentForm.valid) {\n        const paymentData = this.paymentForm.value;\n        // Create a unique ID for the payment\n        const paymentId = 'pay-' + Math.random().toString(36).substr(2, 9);\n        // Calculate the cash return\n        paymentData.cashReturn = this.cashReturn;\n        const newPayment = Object.assign(Object.assign({}, paymentData), {\n          id: paymentId\n        });\n        // Add payment to the payments list\n        this.payments.push(newPayment);\n        // Save payments to localStorage\n        localStorage.setItem('payments', JSON.stringify(this.payments));\n        // Reset form\n        this.paymentForm.reset();\n        this.cashReturn = 0;\n        // Refresh payment list\n        this.refreshPaymentList();\n        // Display receipt automatically (you can trigger this elsewhere too)\n        this.showReceipt(newPayment);\n      }\n    }\n    // Refresh the payment list after a new payment is processed\n    refreshPaymentList() {\n      // If you are using Angular's data-binding, it will automatically update the UI after changes.\n      this.loadPayments(); // Ensure you reload the list of payments from localStorage\n    }\n    // Show Receipt\n    showReceipt(payment) {\n      const receiptHTML = `\n      <div style=\"font-family: Arial, sans-serif; padding: 20px; width: 300px; margin: 0 auto; border: 1px solid #ccc; text-align: center; background: #f9f9f9; border-radius: 8px;\">\n        <h2 style=\"color: #0066cc;\">Haqq Medical Center</h2>\n        <p><strong>Payment Receipt</strong></p>\n        <p><strong>Patient Name:</strong> ${payment.patientName}</p>\n        <p><strong>Amount Paid:</strong> Rs${payment.amount}</p>\n        <p><strong>Payment Method:</strong> ${payment.paymentMethod}</p>\n        <p><strong>Payment Status:</strong> ${payment.paymentStatus}</p>\n        <p><strong>Payment Date:</strong> ${new Date().toLocaleString()}</p>\n      </div>\n    `;\n      const newWindow = window.open('', '', 'width=600, height=600');\n      if (newWindow) {\n        newWindow.document.write(receiptHTML);\n        newWindow.document.close();\n        newWindow.print();\n      }\n    }\n    updatePaymentStatus(paymentId, newStatus) {\n      const paymentIndex = this.payments.findIndex(payment => payment.id === paymentId);\n      if (paymentIndex !== -1) {\n        // Update the payment status\n        this.payments[paymentIndex].paymentStatus = newStatus;\n        // Save updated payments list to localStorage\n        localStorage.setItem('payments', JSON.stringify(this.payments));\n        // Refresh the payment list\n        this.refreshPaymentList();\n      }\n    }\n    // Reset Form\n    resetForm() {\n      this.paymentForm.reset();\n      this.cashReturn = 0;\n    }\n  }\n  PaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || PaymentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  PaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymentComponent,\n    selectors: [[\"app-payment\"]],\n    decls: 54,\n    vars: 5,\n    consts: [[1, \"payment-dashboard\"], [1, \"payment-card\"], [1, \"payment-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"payment-card-header\"], [1, \"payment-title\"], [1, \"form-content\"], [1, \"form-field\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"patientName\", \"required\", \"\", 1, \"input-field\"], [\"matInput\", \"\", \"formControlName\", \"patientId\", 1, \"input-field\", 3, \"value\"], [1, \"amount-label\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"amount\", \"required\", \"\", 1, \"input-field\"], [1, \"cash-label\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"cashGiven\", \"required\", \"\", 1, \"input-field\", 3, \"input\"], [\"formControlName\", \"paymentMethod\", \"required\", \"\"], [\"value\", \"cash\"], [\"value\", \"card\"], [\"formControlName\", \"paymentStatus\", \"required\", \"\"], [\"value\", \"completed\"], [\"value\", \"pending\"], [\"value\", \"failed\"], [\"class\", \"form-field\", 4, \"ngIf\"], [1, \"form-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"submit-btn\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"cancel-btn\", 3, \"click\"], [\"class\", \"payment-history\", 4, \"ngIf\"], [\"matInput\", \"\", \"disabled\", \"\", 1, \"input-field\", 3, \"value\"], [1, \"payment-history\"], [\"mat-table\", \"\", 1, \"payment-table\", 3, \"dataSource\"], [\"matColumnDef\", \"patientName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"amount\"], [\"matColumnDef\", \"cashGiven\"], [\"matColumnDef\", \"cashReturn\"], [\"matColumnDef\", \"paymentMethod\"], [\"matColumnDef\", \"paymentStatus\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"mat-button\", \"\", 1, \"print-receipt-btn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.processPayment();\n        });\n        i0.ɵɵelementStart(3, \"mat-card-header\", 3)(4, \"mat-card-title\", 4);\n        i0.ɵɵtext(5, \"Point of Sale\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\", 5)(7, \"div\", 6)(8, \"mat-form-field\", 7)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Patient Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"mat-form-field\", 7)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Patient ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"mat-form-field\", 7)(19, \"mat-label\", 10);\n        i0.ɵɵtext(20, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"mat-form-field\", 7)(24, \"mat-label\", 12);\n        i0.ɵɵtext(25, \"Cash Given\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 13);\n        i0.ɵɵlistener(\"input\", function PaymentComponent_Template_input_input_26_listener() {\n          return ctx.calculateCashReturn();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"mat-form-field\", 7)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-select\", 14)(32, \"mat-option\", 15);\n        i0.ɵɵtext(33, \"Cash\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-option\", 16);\n        i0.ɵɵtext(35, \"Card\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"div\", 6)(37, \"mat-form-field\", 7)(38, \"mat-label\");\n        i0.ɵɵtext(39, \"Payment Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-select\", 17)(41, \"mat-option\", 18);\n        i0.ɵɵtext(42, \"Completed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-option\", 19);\n        i0.ɵɵtext(44, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-option\", 20);\n        i0.ɵɵtext(46, \"Failed\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(47, PaymentComponent_div_47_Template, 5, 1, \"div\", 21);\n        i0.ɵɵelementStart(48, \"div\", 22)(49, \"button\", 23);\n        i0.ɵɵtext(50, \" Process Payment \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_51_listener() {\n          return ctx.resetForm();\n        });\n        i0.ɵɵtext(52, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(53, PaymentComponent_mat_card_content_53_Template, 27, 3, \"mat-card-content\", 25);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.paymentForm);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"value\", ctx.patientId);\n        i0.ɵɵadvance(31);\n        i0.ɵɵproperty(\"ngIf\", ctx.cashReturn >= 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.paymentForm.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.payments.length > 0);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatButton, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow, i5.MatCard, i5.MatCardContent, i5.MatCardHeader, i5.MatCardTitle, i6.MatFormField, i6.MatLabel, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i7.MatInput, i8.MatSelect, i9.MatOption],\n    styles: [\".payment-dashboard[_ngcontent-%COMP%]{display:flex;justify-content:center;padding:20px}.payment-card[_ngcontent-%COMP%]{width:100%;max-width:800px;margin-bottom:20px}.payment-card-header[_ngcontent-%COMP%]{background-color:#f5f5f5;color:#06c;font-weight:700}.payment-card-title[_ngcontent-%COMP%]{font-size:20px;text-align:center}.form-content[_ngcontent-%COMP%]{padding:20px}.form-field[_ngcontent-%COMP%]{margin-bottom:20px}.input-field[_ngcontent-%COMP%]{width:100%}.amount-label[_ngcontent-%COMP%], .cash-label[_ngcontent-%COMP%]{color:#06c}.full-width[_ngcontent-%COMP%]{width:100%}.payment-table[_ngcontent-%COMP%]{width:100%;margin-top:20px}.payment-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#06c;color:#fff}.print-receipt-btn[_ngcontent-%COMP%]{background-color:#28a745;color:#fff}.submit-btn[_ngcontent-%COMP%]{width:48%;margin-right:4%}.cancel-btn[_ngcontent-%COMP%]{width:48%}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.payment-history[_ngcontent-%COMP%]{margin-top:20px}h3[_ngcontent-%COMP%]{text-align:center;color:#06c;font-size:24px}\"]\n  });\n  return PaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}